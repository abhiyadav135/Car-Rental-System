# 5. Generate Fibonacci Series
def fibonacci_series(n):
    fib_series = []
    a, b = 0, 1
    for _ in range(n):
        fib_series.append(a)
        a, b = b, a + b
    return fib_series

# Call the function
n = 10  # You can change this number to generate more or fewer Fibonacci numbers
print(f"Fibonacci Series up to {n} terms: {fibonacci_series(n)}")

# 6. Calculate Factorial Using a Loop
def factorial(n):
    result = 1
    for i in range(1, n + 1):
        result *= i
    return result

# Call the function
number = 5  # You can change this number to calculate the factorial of another number
print(f"Factorial of {number} is: {factorial(number)}")

# 7. Check if a Number is an Armstrong Number
def is_armstrong(num):
    power = len(str(num))
    return sum(int(digit) ** power for digit in str(num)) == num

# Call the function
number = 153  # You can change this number to test
print(f"Is {number} an Armstrong number? {is_armstrong(number)}")

# 8. Check if a Number is a Perfect Number
def is_perfect(num):
    return sum(i for i in range(1, num) if num % i == 0 ) == num

# Call the function
number = 28  # You can change this number to test
print(f"Is {number} a perfect number? {is_perfect(number)}")

# 9. Check if a Number is a Strong Number
def is_strong(num):
    return sum(factorial(int(digit)) for digit in str(num)) == num

# Call the function
number = 145  # You can change this number to test
print(f"Is {number} a strong number? {is_strong(number)}")

# 10. Print Multiplication Tables
def multiplication_table(n, upto=10):
    for i in range(1, upto + 1):
        print(f"{n} x {i} = {n * i}")

# Call the function
number = 5  # You can change this number to generate the multiplication table for another number
print(f"Multiplication table for {number}:")
multiplication_table(number)

# 11. Calculate the LCM and GCD of Two Numbers
import math

def gcd(a, b):
    return math.gcd(a, b)

def lcm(a, b):
    return abs(a * b) // gcd(a, b)

# Call the functions
num1 = 12  # You can change these numbers to test
num2 = 15
print(f"GCD of {num1} and {num2} is: {gcd(num1, num2)}")
print(f"LCM of {num1} and {num2} is: {lcm(num1, num2)}")
